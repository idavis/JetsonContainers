{
	"name": "jetson-containers",
    
	// Sets the run context to one level up instead of the .devcontainer folder.
	"context": ".",

	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	"dockerFile": "Dockerfile",

	// Set *default* container specific settings.json values on container create.
	"settings": { 
		"terminal.integrated.shell.linux": "/bin/bash"
	},

	// Use this environment variable if you need to bind mount your local source code into a new container.
	"remoteEnv": {
		"LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}"
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
        "ms-azuretools.vscode-docker",
        "ms-python.python"
    ],

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	"postCreateCommand": "make init",

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	"runArgs": ["--init"],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	"mounts": [
		"source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind",
		"source=/tmp,target=/tmp,type=bind"
	 ],

	// Uncomment the next two lines to connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.
	"overrideCommand": false,
	"remoteUser": "vscode"
}
